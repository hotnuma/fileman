diff --git a/thunar/thunar-standard-view.c b/thunar/thunar-standard-view.c
index 494ba355..0120686e 100644
--- a/thunar/thunar-standard-view.c
+++ b/thunar/thunar-standard-view.c
@@ -357,6 +357,9 @@ struct _ThunarStandardViewPrivate
 
   /* current search query, used to allow switching between views with different (or NULL) search queries */
   gchar                  *search_query;
+
+  /* used to restore the view type after a search is completed */
+  GType                   type;
 };
 
 static XfceGtkActionEntry thunar_standard_view_action_entries[] =
@@ -791,6 +794,7 @@ thunar_standard_view_init (ThunarStandardView *standard_view)
   standard_view->accel_group = NULL;
 
   standard_view->priv->search_query = NULL;
+  standard_view->priv->type = 0;
 }
 
 static void thunar_standard_view_store_sort_column  (ThunarStandardView *standard_view)
@@ -4196,6 +4200,23 @@ thunar_standard_view_get_search_query (ThunarStandardView *standard_view)
 
 
 
+void
+thunar_standard_view_save_view_type (ThunarStandardView *standard_view,
+                                     GType               type)
+{
+  standard_view->priv->type = type;
+}
+
+
+
+GType
+thunar_standard_view_get_saved_view_type (ThunarStandardView *standard_view)
+{
+  return standard_view->priv->type;
+}
+
+
+
 XfceGtkActionEntry*
 thunar_standard_view_get_action_entries (void)
 {
diff --git a/thunar/thunar-standard-view.h b/thunar/thunar-standard-view.h
index c26a8749..58f3a640 100644
--- a/thunar/thunar-standard-view.h
+++ b/thunar/thunar-standard-view.h
@@ -188,6 +188,10 @@ gchar              *thunar_standard_view_get_search_query      (ThunarStandardVi
 
 void                thunar_standard_view_update_statusbar_text (ThunarStandardView       *standard_view);
 
+void                thunar_standard_view_save_view_type        (ThunarStandardView       *standard_view,
+                                                                GType                     type);
+GType               thunar_standard_view_get_saved_view_type   (ThunarStandardView       *standard_view);
+
 XfceGtkActionEntry *thunar_standard_view_get_action_entries (void);
 
 
diff --git a/thunar/thunar-window.c b/thunar/thunar-window.c
index c5831c77..be7baf43 100644
--- a/thunar/thunar-window.c
+++ b/thunar/thunar-window.c
@@ -1280,12 +1280,16 @@ thunar_window_update_view_menu (ThunarWindow *window,
       xfce_gtk_menu_append_seperator (GTK_MENU_SHELL (menu));
     }
 
-  xfce_gtk_toggle_menu_item_new_from_action_entry (get_action_entry (THUNAR_WINDOW_ACTION_VIEW_AS_ICONS),
+  item = xfce_gtk_toggle_menu_item_new_from_action_entry (get_action_entry (THUNAR_WINDOW_ACTION_VIEW_AS_ICONS),
                                                  G_OBJECT (window), window->view_type == THUNAR_TYPE_ICON_VIEW, GTK_MENU_SHELL (menu));
+  if (window->is_searching == TRUE)
+    gtk_widget_set_sensitive (item, FALSE);
   xfce_gtk_toggle_menu_item_new_from_action_entry (get_action_entry (THUNAR_WINDOW_ACTION_VIEW_AS_DETAILED_LIST),
-                                                 G_OBJECT (window), window->view_type == THUNAR_TYPE_DETAILS_VIEW, GTK_MENU_SHELL (menu));
-  xfce_gtk_toggle_menu_item_new_from_action_entry (get_action_entry (THUNAR_WINDOW_ACTION_VIEW_AS_COMPACT_LIST),
-                                                 G_OBJECT (window), window->view_type == THUNAR_TYPE_COMPACT_VIEW, GTK_MENU_SHELL (menu));
+                                                   G_OBJECT (window), window->view_type == THUNAR_TYPE_DETAILS_VIEW, GTK_MENU_SHELL (menu));
+  item = xfce_gtk_toggle_menu_item_new_from_action_entry (get_action_entry (THUNAR_WINDOW_ACTION_VIEW_AS_COMPACT_LIST),
+                                                          G_OBJECT (window), window->view_type == THUNAR_TYPE_COMPACT_VIEW, GTK_MENU_SHELL (menu));
+  if (window->is_searching == TRUE)
+    gtk_widget_set_sensitive (item, FALSE);
 
   gtk_widget_show_all (GTK_WIDGET (menu));
 
@@ -2915,6 +2919,12 @@ thunar_window_start_open_location (ThunarWindow *window,
   /* setup a search if required */
   if (initial_text != NULL && thunar_util_is_a_search_query (initial_text) == TRUE)
     {
+      GType view_type;
+      /* workaround the slowness of ExoIconView */
+      view_type = window->view_type;
+      thunar_window_action_detailed_view (window);
+      thunar_standard_view_save_view_type (THUNAR_STANDARD_VIEW (window->view), view_type); /* save it in the new view */
+
       /* temporary show the location toolbar, even if it is normally hidden */
       gtk_widget_show (window->location_toolbar);
       thunar_location_bar_request_entry (THUNAR_LOCATION_BAR (window->location_bar), initial_text);
@@ -2922,6 +2932,8 @@ thunar_window_start_open_location (ThunarWindow *window,
       thunar_window_update_search (window);
       window->is_searching = TRUE;
       thunar_launcher_set_searching (window->launcher, TRUE);
+
+      /* the check is useless as long as the workaround is in place */
       if (THUNAR_IS_DETAILS_VIEW (window->view))
         thunar_details_view_set_location_column_visible (THUNAR_DETAILS_VIEW (window->view), TRUE);
     }
@@ -2941,6 +2953,8 @@ static void
 thunar_window_resume_search (ThunarWindow *window,
                              const gchar  *initial_text)
 {
+  GType view_type;
+
   _thunar_return_if_fail (THUNAR_IS_WINDOW (window));
 
   /* when setting up the location entry do not resent the search query to the standard view, there is a search ongoing */
@@ -2958,6 +2972,8 @@ thunar_window_resume_search (ThunarWindow *window,
   window->search_query = thunar_location_bar_get_search_query (THUNAR_LOCATION_BAR (window->location_bar));
   gtk_widget_show (window->catfish_search_button);
   thunar_launcher_set_searching (window->launcher, TRUE);
+
+  /* the check is useless as long as the workaround is in place */
   if (THUNAR_IS_DETAILS_VIEW (window->view))
     thunar_details_view_set_location_column_visible (THUNAR_DETAILS_VIEW (window->view), TRUE);
 }
@@ -3002,6 +3018,15 @@ thunar_window_action_cancel_search (ThunarWindow *window)
     thunar_details_view_set_location_column_visible (THUNAR_DETAILS_VIEW (window->view), FALSE);
 
   window->is_searching = FALSE;
+
+  /* null check for the same reason as thunar_standard_view_set_searching */
+  if (window->view != NULL)
+    {
+      if (thunar_standard_view_get_saved_view_type (THUNAR_STANDARD_VIEW (window->view)) != 0)
+        thunar_window_action_view_changed (window, thunar_standard_view_get_saved_view_type (THUNAR_STANDARD_VIEW (window->view)));
+
+      thunar_standard_view_save_view_type (THUNAR_STANDARD_VIEW (window->view), 0);
+    }
 }
 
 
@@ -3424,7 +3449,8 @@ thunar_window_action_detailed_view (ThunarWindow *window)
 static void
 thunar_window_action_icon_view (ThunarWindow *window)
 {
-  thunar_window_action_view_changed (window, THUNAR_TYPE_ICON_VIEW);
+  if (window->is_searching == FALSE)
+    thunar_window_action_view_changed (window, THUNAR_TYPE_ICON_VIEW);
 }
 
 
@@ -3432,7 +3458,8 @@ thunar_window_action_icon_view (ThunarWindow *window)
 static void
 thunar_window_action_compact_view (ThunarWindow *window)
 {
-  thunar_window_action_view_changed (window, THUNAR_TYPE_COMPACT_VIEW);
+  if (window->is_searching == FALSE)
+    thunar_window_action_view_changed (window, THUNAR_TYPE_COMPACT_VIEW);
 }
 
 
