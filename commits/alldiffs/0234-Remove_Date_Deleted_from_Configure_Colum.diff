diff --git a/thunar/thunar-column-editor.c b/thunar/thunar-column-editor.c
index bb0ae5e8..2e506903 100644
--- a/thunar/thunar-column-editor.c
+++ b/thunar/thunar-column-editor.c
@@ -90,12 +90,41 @@ thunar_column_editor_class_init (ThunarColumnEditorClass *klass)
 
 
 
+static gboolean
+thunar_column_visible_func (GtkTreeModel *model,
+                            GtkTreeIter  *iter,
+                            gpointer     data)
+{
+  gchar       *col_name;
+  const gchar *del_date_col_name;
+  gboolean     visible = TRUE;
+
+  /* fetching Date Deleted column name */
+  del_date_col_name = thunar_column_model_get_column_name (THUNAR_COLUMN_MODEL (model),
+                                                           THUNAR_COLUMN_DATE_DELETED);
+
+  /* fetching iter column name */
+  gtk_tree_model_get (model, iter, THUNAR_COLUMN_MODEL_COLUMN_NAME, &col_name, -1);
+
+  /* matching iter column name & Date Deleted column name */
+  if (g_strcmp0 (col_name, del_date_col_name) == 0)
+    visible = FALSE;
+
+  g_free (col_name);
+
+  return visible;
+}
+
+
+
 static void
 thunar_column_editor_init (ThunarColumnEditor *column_editor)
 {
   GtkTreeViewColumn *column;
   GtkTreeSelection  *selection;
+  GtkTreeModel      *filter;
   GtkCellRenderer   *renderer;
+  GtkTreeIter        childIter;
   GtkTreeIter        iter;
   GtkWidget         *separator;
   GtkWidget         *button;
@@ -117,6 +146,12 @@ thunar_column_editor_init (ThunarColumnEditor *column_editor)
   g_signal_connect_data (G_OBJECT (column_editor->column_model), "rows-reordered", G_CALLBACK (thunar_column_editor_update_buttons),
                          column_editor, NULL, G_CONNECT_AFTER | G_CONNECT_SWAPPED);
 
+  /* create a filter from the shared column model */
+  filter = gtk_tree_model_filter_new (GTK_TREE_MODEL (column_editor->column_model), NULL);
+  gtk_tree_model_filter_set_visible_func (GTK_TREE_MODEL_FILTER (filter),
+                                          (GtkTreeModelFilterVisibleFunc) thunar_column_visible_func,
+                                          NULL, NULL);
+
   /* setup the dialog */
   gtk_dialog_add_button (GTK_DIALOG (column_editor), _("_Close"), GTK_RESPONSE_CLOSE);
   gtk_dialog_set_default_response (GTK_DIALOG (column_editor), GTK_RESPONSE_CLOSE);
@@ -171,9 +206,8 @@ thunar_column_editor_init (ThunarColumnEditor *column_editor)
   gtk_widget_show (swin);
 
   /* create the tree view */
-  column_editor->tree_view = gtk_tree_view_new ();
+  column_editor->tree_view = gtk_tree_view_new_with_model (filter);
   gtk_tree_view_set_headers_visible (GTK_TREE_VIEW (column_editor->tree_view), FALSE);
-  gtk_tree_view_set_model (GTK_TREE_VIEW (column_editor->tree_view), GTK_TREE_MODEL (column_editor->column_model));
   gtk_container_add (GTK_CONTAINER (swin), column_editor->tree_view);
   gtk_widget_show (column_editor->tree_view);
 
@@ -305,8 +339,13 @@ thunar_column_editor_init (ThunarColumnEditor *column_editor)
   g_signal_connect_swapped (G_OBJECT (selection), "changed", G_CALLBACK (thunar_column_editor_update_buttons), column_editor);
 
   /* select the first item */
-  if (gtk_tree_model_get_iter_first (GTK_TREE_MODEL (column_editor->column_model), &iter))
-    gtk_tree_selection_select_iter (selection, &iter);
+  if (gtk_tree_model_get_iter_first (GTK_TREE_MODEL (column_editor->column_model), &childIter))
+    {
+      /* tree_view is created from filter & column_model is the child of filter
+       * hence, child Iter needs to be converted to parent Iter */
+      gtk_tree_model_filter_convert_child_iter_to_iter (GTK_TREE_MODEL_FILTER (filter), &iter, &childIter);
+      gtk_tree_selection_select_iter (selection, &iter);
+    }
 
   /* grab focus to the tree view */
   gtk_widget_grab_focus (column_editor->tree_view);
@@ -353,8 +392,11 @@ thunar_column_editor_move_down (GtkWidget          *button,
 {
   GtkTreeSelection *selection;
   GtkTreeModel     *model;
+  GtkTreeModel     *childModel;
   GtkTreeIter       iter1;
   GtkTreeIter       iter2;
+  GtkTreeIter       childIter1;
+  GtkTreeIter       childIter2;
 
   _thunar_return_if_fail (THUNAR_IS_COLUMN_EDITOR (column_editor));
   _thunar_return_if_fail (GTK_IS_BUTTON (button));
@@ -368,7 +410,14 @@ thunar_column_editor_move_down (GtkWidget          *button,
 
       /* determine the next iterator and exchange the rows */
       if (gtk_tree_model_iter_next (model, &iter2))
-        thunar_column_model_exchange (THUNAR_COLUMN_MODEL (model), &iter1, &iter2);
+        {
+          /* tree view's model is made from GTK_TREE_MODEL_FILTER, hence fetching child model and child iter's */
+          gtk_tree_model_filter_convert_iter_to_child_iter (GTK_TREE_MODEL_FILTER (model), &childIter1, &iter1);
+          gtk_tree_model_filter_convert_iter_to_child_iter (GTK_TREE_MODEL_FILTER (model), &childIter2, &iter2);
+          childModel = gtk_tree_model_filter_get_model(GTK_TREE_MODEL_FILTER (model));
+
+          thunar_column_model_exchange (THUNAR_COLUMN_MODEL (childModel), &childIter1, &childIter2);
+        }
     }
 }
 
@@ -380,9 +429,12 @@ thunar_column_editor_move_up (GtkWidget          *button,
 {
   GtkTreeSelection *selection;
   GtkTreeModel     *model;
+  GtkTreeModel     *childModel;
   GtkTreePath      *path;
   GtkTreeIter       iter1;
   GtkTreeIter       iter2;
+  GtkTreeIter       childIter1;
+  GtkTreeIter       childIter2;
 
   _thunar_return_if_fail (THUNAR_IS_COLUMN_EDITOR (column_editor));
   _thunar_return_if_fail (GTK_IS_BUTTON (button));
@@ -398,8 +450,13 @@ thunar_column_editor_move_up (GtkWidget          *button,
           /* advance to the prev path */
           if (gtk_tree_path_prev (path) && gtk_tree_model_get_iter (model, &iter2, path))
             {
+              /* tree view's model is made from GTK_TREE_MODEL_FILTER, hence fetching child model and child iter's */
+              gtk_tree_model_filter_convert_iter_to_child_iter (GTK_TREE_MODEL_FILTER (model), &childIter1, &iter1);
+              gtk_tree_model_filter_convert_iter_to_child_iter (GTK_TREE_MODEL_FILTER (model), &childIter2, &iter2);
+              childModel = gtk_tree_model_filter_get_model(GTK_TREE_MODEL_FILTER (model));
+
               /* exchange the rows */
-              thunar_column_model_exchange (THUNAR_COLUMN_MODEL (model), &iter1, &iter2);
+              thunar_column_model_exchange (THUNAR_COLUMN_MODEL (childModel), &childIter1, &childIter2);
             }
 
           /* release the path */
@@ -448,7 +505,9 @@ thunar_column_editor_toggle_visibility (GtkWidget          *button,
 {
   GtkTreeSelection *selection;
   ThunarColumn      column;
+  GtkTreeModel     *model;
   GtkTreeIter       iter;
+  GtkTreeIter       childIter;
   gboolean          visible;
 
   _thunar_return_if_fail (THUNAR_IS_COLUMN_EDITOR (column_editor));
@@ -456,10 +515,13 @@ thunar_column_editor_toggle_visibility (GtkWidget          *button,
 
   /* determine the selected tree iterator */
   selection = gtk_tree_view_get_selection (GTK_TREE_VIEW (column_editor->tree_view));
-  if (gtk_tree_selection_get_selected (selection, NULL, &iter))
+  if (gtk_tree_selection_get_selected (selection, &model, &iter))
     {
+      /* tree view's model is made from GTK_TREE_MODEL_FILTER, hence fetching child iter */
+      gtk_tree_model_filter_convert_iter_to_child_iter (GTK_TREE_MODEL_FILTER (model), &childIter, &iter);
+
       /* determine the column for the iterator... */
-      column = thunar_column_model_get_column_for_iter (column_editor->column_model, &iter);
+      column = thunar_column_model_get_column_for_iter (column_editor->column_model, &childIter);
 
       /* ...determine the existing visbility setting... */
       visible = thunar_column_model_get_column_visible (column_editor->column_model, column);
@@ -488,6 +550,10 @@ thunar_column_editor_update_buttons (ThunarColumnEditor *column_editor)
     {
       /* determine the tree path for the iter */
       path = gtk_tree_model_get_path (model, &iter);
+
+      /* tree view's model is made from GTK_TREE_MODEL_FILTER, hence fetching child path */
+      path = gtk_tree_model_filter_convert_path_to_child_path (GTK_TREE_MODEL_FILTER (model), path);
+
       if (G_UNLIKELY (path == NULL))
         return;
 
