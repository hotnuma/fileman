diff --git a/thunar/thunar-list-model.c b/thunar/thunar-list-model.c
index 6413aac2..cc74483e 100644
--- a/thunar/thunar-list-model.c
+++ b/thunar/thunar-list-model.c
@@ -783,8 +783,8 @@ thunar_list_model_get_value (GtkTreeModel *model,
   ThunarUser  *user;
   ThunarFile  *file;
   GFile       *g_file;
+  GFile       *g_file_parent;
   gchar       *str;
-  gchar       *uri;
 
   _thunar_return_if_fail (THUNAR_IS_LIST_MODEL (model));
   _thunar_return_if_fail (iter->stamp == (THUNAR_LIST_MODEL (model))->stamp);
@@ -825,20 +825,53 @@ thunar_list_model_get_value (GtkTreeModel *model,
       break;
 
     case THUNAR_COLUMN_LOCATION:
+      ThunarFolder *folder;
+
       g_value_init (value, G_TYPE_STRING);
-      uri = thunar_file_dup_uri (file);
-      str = g_path_get_dirname (uri);
+      g_file_parent = g_file_get_parent (thunar_file_get_file (file));
+      str = NULL;
 
-      /* remove the uri prefix for normal, local files */
-      if (strncmp ("file://", str, 7) == 0)
+      /* g_file_parent will be NULL only if a search returned the root
+       * directory somehow, or "file:///" is in recent:/// somehow.
+       * These should be quite rare circumstances. */
+      if (G_UNLIKELY (g_file_parent == NULL))
         {
-          gchar *old = str;
-          str = g_strdup (str + 7);
-          g_free (old);
+          g_value_take_string (value, NULL);
+          break;
         }
 
+      /* Try and show a relative path beginning with the current folder's name to the parent folder.
+       * Fall thru with str==NULL if that is not possible. */
+      folder = THUNAR_LIST_MODEL (model)->folder;
+      if (G_LIKELY (folder != NULL))
+        {
+          const gchar *folder_basename = thunar_file_get_basename( thunar_folder_get_corresponding_file (folder));
+          GFile *g_folder = thunar_file_get_file (thunar_folder_get_corresponding_file (folder));
+          if (g_file_equal (g_folder, g_file_parent))
+            {
+              /* commonest non-prefix case: item location is directly inside the search folder */
+              str = g_strdup (folder_basename);
+            }
+          else
+            {
+              str = g_file_get_relative_path (g_folder, g_file_parent);
+              /* str can still be NULL if g_folder is not a prefix of g_file_parent */
+              if (str != NULL)
+                {
+                  gchar *tmp = g_build_path (G_DIR_SEPARATOR_S, folder_basename, str, NULL);
+                  g_free (str);
+                  str = tmp;
+                }
+            }
+        }
+
+      /* catchall for when model->folder is not an ancestor of the parent (e.g. when searching recent:///).
+       * In this case, show a prettified absolute URI or local path. */
+      if (str == NULL)
+        str = g_file_get_parse_name (g_file_parent);
+
+      g_object_unref (g_file_parent);
       g_value_take_string (value, str);
-      g_free (uri);
       break;
 
     case THUNAR_COLUMN_GROUP:
