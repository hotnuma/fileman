diff --git a/thunar/thunar-standard-view.c b/thunar/thunar-standard-view.c
index e9693bf2..b6cc4f62 100644
--- a/thunar/thunar-standard-view.c
+++ b/thunar/thunar-standard-view.c
@@ -78,7 +78,9 @@ enum
   PROP_DIRECTORY_SPECIFIC_SETTINGS,
   PROP_THUMBNAIL_DRAW_FRAMES,
   PROP_SORT_COLUMN,
+  PROP_SORT_COLUMN_DEFAULT,
   PROP_SORT_ORDER,
+  PROP_SORT_ORDER_DEFAULT,
   PROP_ACCEL_GROUP,
   N_PROPERTIES
 };
@@ -355,11 +357,15 @@ struct _ThunarStandardViewPrivate
   /* file insert signal */
   gulong                  row_changed_id;
 
-  /* current sort column ID */
+  /* current sort column ID and it's fallback
+   * the default is only relevant for directory specific settings */
   ThunarColumn            sort_column;
+  ThunarColumn            sort_column_default;
 
-  /* current sort_order (GTK_SORT_ASCENDING || GTK_SORT_DESCENDING) */
+  /* current sort_order (GTK_SORT_ASCENDING || GTK_SORT_DESCENDING)
+   * the default is only relevant for directory specific settings */
   GtkSortType             sort_order;
+  GtkSortType             sort_order_default;
 
   /* current search query, used to allow switching between views with different (or NULL) search queries */
   gchar                  *search_query;
@@ -637,6 +643,20 @@ thunar_standard_view_class_init (ThunarStandardViewClass *klass)
                          THUNAR_COLUMN_NAME,
                          EXO_PARAM_READWRITE);
 
+  /**
+   * ThunarStandardView:sort-column-default:
+   *
+   * Only relevant for directory specific settings
+   * The sort column to use if no directory specific settings are found for a directory
+   **/
+  standard_view_props[PROP_SORT_COLUMN_DEFAULT] =
+      g_param_spec_enum ("sort-column-default",
+                         "SortColumnDefault",
+                         NULL,
+                         THUNAR_TYPE_COLUMN,
+                         THUNAR_COLUMN_NAME,
+                         EXO_PARAM_WRITABLE);
+
   /**
    * ThunarStandardView:sort-order:
    *
@@ -650,6 +670,20 @@ thunar_standard_view_class_init (ThunarStandardViewClass *klass)
                          GTK_SORT_ASCENDING,
                          EXO_PARAM_READWRITE);
 
+  /**
+   * ThunarStandardView:sort-order-default:
+   *
+   * Only relevant for directory specific settings
+   * The sort order to use if no directory specific settings are found for a directory
+   **/
+  standard_view_props[PROP_SORT_ORDER_DEFAULT] =
+      g_param_spec_enum ("sort-order-default",
+                         "SortOrderDefault",
+                         NULL,
+                         GTK_TYPE_SORT_TYPE,
+                         GTK_SORT_ASCENDING,
+                         EXO_PARAM_WRITABLE);
+
   /* override ThunarComponent's properties */
   g_iface = g_type_default_interface_peek (THUNAR_TYPE_COMPONENT);
   standard_view_props[PROP_SELECTED_FILES] =
@@ -1170,10 +1204,18 @@ thunar_standard_view_set_property (GObject      *object,
       thunar_standard_view_set_sort_column (standard_view, g_value_get_enum (value));
       break;
 
+    case PROP_SORT_COLUMN_DEFAULT:
+      standard_view->priv->sort_column_default = g_value_get_enum (value);
+      break;
+
     case PROP_SORT_ORDER:
       thunar_standard_view_set_sort_order (standard_view, g_value_get_enum (value));
       break;
 
+    case PROP_SORT_ORDER_DEFAULT:
+      standard_view->priv->sort_order_default = g_value_get_enum (value);
+      break;
+
     case PROP_ACCEL_GROUP:
       thunar_standard_view_disconnect_accelerators (standard_view);
       standard_view->accel_group = g_value_dup_object (value);
@@ -1829,17 +1871,19 @@ thunar_standard_view_apply_directory_specific_settings (ThunarStandardView *stan
   if (sort_column_name != NULL)
     thunar_column_value_from_string (sort_column_name, &sort_column);
 
-  /* Out of range ? --> Fallback to sort by NAME column. */
+  /* Out of range ? Use the default value */
   if (sort_column >= THUNAR_N_VISIBLE_COLUMNS)
-    sort_column = THUNAR_COLUMN_NAME;
+    sort_column = standard_view->priv->sort_column_default;
 
   /* convert the sort order name to a value */
   if (sort_order_name != NULL)
     {
       if (g_strcmp0 (sort_order_name, "GTK_SORT_DESCENDING") == 0)
         sort_order = GTK_SORT_DESCENDING;
-      else
+      else if (g_strcmp0 (sort_order_name, "GTK_SORT_ASCENDING") == 0)
         sort_order = GTK_SORT_ASCENDING;
+      else
+        sort_order = standard_view->priv->sort_order_default;
     }
 
   /* convert the zoom level name to a value */
diff --git a/thunar/thunar-window.c b/thunar/thunar-window.c
index 8321c9ef..037e0224 100644
--- a/thunar/thunar-window.c
+++ b/thunar/thunar-window.c
@@ -2392,16 +2392,21 @@ thunar_window_notebook_insert_page (ThunarWindow  *window,
   _thunar_return_val_if_fail (view_type != G_TYPE_NONE, NULL);
   _thunar_return_val_if_fail (history == NULL || THUNAR_IS_HISTORY (history), NULL);
 
+  /* Figure out which sort settings to use */
+  if (window->view == NULL)
+    g_object_get (G_OBJECT (window->preferences), "last-sort-column", &sort_column, "last-sort-order", &sort_order, NULL);
+  else
+    g_object_get (window->view, "sort-column", &sort_column, "sort-order", &sort_order, NULL);
+
   /* allocate and setup a new view */
-  view = g_object_new (view_type, "current-directory", directory, NULL);
+  view = g_object_new (view_type, "current-directory", directory,
+                                  "sort-column-default", sort_column,
+                                  "sort-order-default", sort_order, NULL);
   thunar_view_set_show_hidden (THUNAR_VIEW (view), window->show_hidden);
 
-  /* inherit sort settings from current view */
-  if (window->view != NULL)
-    {
-      g_object_get (window->view, "sort-column", &sort_column, "sort-order", &sort_order, NULL);
-      g_object_set (view, "sort-column", sort_column, "sort-order", sort_order, NULL);
-    }
+  /* If directory specific settings are disabled, directly use the sort settings of the current view for it */
+  if (!window->directory_specific_settings)
+    g_object_set (view, "sort-column", sort_column, "sort-order", sort_order, NULL);
 
   gtk_widget_show (view);
 
