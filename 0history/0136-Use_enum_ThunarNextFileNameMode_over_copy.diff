diff --git a/thunar/thunar-io-jobs-util.c b/thunar/thunar-io-jobs-util.c
index 3cf841bb..d1200fc9 100644
--- a/thunar/thunar-io-jobs-util.c
+++ b/thunar/thunar-io-jobs-util.c
@@ -34,10 +34,10 @@
 
 /**
  * thunar_io_jobs_util_next_duplicate_file:
- * @job   : a #ThunarJob.
- * @file  : the source #GFile.
- * @type  : the operation type (copy or link).
- * @error : return location for errors or %NULL.
+ * @job        : a #ThunarJob.
+ * @file       : the source #GFile.
+ * @name_mode  : the naming mode to use (copy/link).
+ * @error      : return location for errors or %NULL.
  *
  * Determines the #GFile for the next copy/link of/to @file.
  *
@@ -53,10 +53,10 @@
  *               of @file or %NULL on error/cancellation.
  **/
 GFile*
-thunar_io_jobs_util_next_duplicate_file (ThunarJob *job,
-                                         GFile     *file,
-                                         gboolean   copy,
-                                         GError   **error)
+thunar_io_jobs_util_next_duplicate_file (ThunarJob               *job,
+                                         GFile                   *file,
+                                         ThunarNextFileNameMode   name_mode,
+                                         GError                 **error)
 {
   GFileInfo   *info;
   GError      *err = NULL;
@@ -101,7 +101,7 @@ thunar_io_jobs_util_next_duplicate_file (ThunarJob *job,
 
   display_name = thunar_util_next_new_file_name (thunar_parent_file,
                                                  old_display_name,
-                                                 copy ? THUNAR_NEXT_FILE_NAME_MODE_COPY : THUNAR_NEXT_FILE_NAME_MODE_LINK);
+                                                 name_mode);
   g_object_unref (thunar_parent_file);
 
   /* create the GFile for the copy/link */
diff --git a/thunar/thunar-io-jobs-util.h b/thunar/thunar-io-jobs-util.h
index 2ef7da92..190797dc 100644
--- a/thunar/thunar-io-jobs-util.h
+++ b/thunar/thunar-io-jobs-util.h
@@ -22,13 +22,14 @@
 #define __THUNAR_IO_JOBS_UTIL_H__
 
 #include <thunar/thunar-job.h>
+#include <thunar/thunar-util.h>
 
 G_BEGIN_DECLS
 
-GFile *thunar_io_jobs_util_next_duplicate_file (ThunarJob *job,
-                                                GFile     *file,
-                                                gboolean   copy,
-                                                GError   **error) G_GNUC_MALLOC G_GNUC_WARN_UNUSED_RESULT;
+GFile *thunar_io_jobs_util_next_duplicate_file (ThunarJob             *job,
+                                                GFile                 *file,
+                                                ThunarNextFileNameMode name_mode,
+                                                GError               **error) G_GNUC_MALLOC G_GNUC_WARN_UNUSED_RESULT;
 
 GFile *thunar_io_jobs_util_next_renamed_file (ThunarJob *job,
                                               GFile     *src_file,
diff --git a/thunar/thunar-io-jobs.c b/thunar/thunar-io-jobs.c
index f8747724..1a09df77 100644
--- a/thunar/thunar-io-jobs.c
+++ b/thunar/thunar-io-jobs.c
@@ -649,7 +649,7 @@ _thunar_io_jobs_link_file (ThunarJob *job,
       if (!g_file_equal (source_file, target_file))
         target = g_object_ref (target_file);
       else
-        target = thunar_io_jobs_util_next_duplicate_file (job, source_file, FALSE, &err);
+        target = thunar_io_jobs_util_next_duplicate_file (job, source_file, THUNAR_NEXT_FILE_NAME_MODE_LINK, &err);
 
       if (err == NULL)
         {
diff --git a/thunar/thunar-transfer-job.c b/thunar/thunar-transfer-job.c
index 8fea58f6..ac70db44 100644
--- a/thunar/thunar-transfer-job.c
+++ b/thunar/thunar-transfer-job.c
@@ -706,7 +706,7 @@ thunar_transfer_job_copy_file (ThunarTransferJob *job,
       if (G_LIKELY (!g_file_equal (source_file, dest_file)))
         target = g_object_ref (dest_file);
       else
-        target = thunar_io_jobs_util_next_duplicate_file (THUNAR_JOB (job), source_file, TRUE, &err);
+        target = thunar_io_jobs_util_next_duplicate_file (THUNAR_JOB (job), source_file, THUNAR_NEXT_FILE_NAME_MODE_COPY, &err);
 
       if (err == NULL)
         {
