diff --git a/thunar/thunar-details-view.c b/thunar/thunar-details-view.c
index c42a6cf5..a4352031 100644
--- a/thunar/thunar-details-view.c
+++ b/thunar/thunar-details-view.c
@@ -1087,3 +1087,12 @@ thunar_details_view_set_recency_column_visible      (ThunarDetailsView *details_
   thunar_column_model_set_column_visible (details_view->column_model, THUNAR_COLUMN_RECENCY, visible);
 }
 
+
+
+void
+thunar_details_view_set_location_column_visible     (ThunarDetailsView *details_view,
+                                                     gboolean           visible)
+{
+  thunar_column_model_set_column_visible (details_view->column_model, THUNAR_COLUMN_LOCATION, visible);
+}
+
diff --git a/thunar/thunar-details-view.h b/thunar/thunar-details-view.h
index 835541c8..14bacaf4 100644
--- a/thunar/thunar-details-view.h
+++ b/thunar/thunar-details-view.h
@@ -43,6 +43,7 @@ typedef enum
 GType      thunar_details_view_get_type                         (void) G_GNUC_CONST;
 void       thunar_details_view_set_date_deleted_column_visible  (ThunarDetailsView*, gboolean);
 void       thunar_details_view_set_recency_column_visible       (ThunarDetailsView*, gboolean);
+void       thunar_details_view_set_location_column_visible      (ThunarDetailsView*, gboolean);
 
 G_END_DECLS;
 
diff --git a/thunar/thunar-enum-types.c b/thunar/thunar-enum-types.c
index 6b6e8153..e512b1f5 100644
--- a/thunar/thunar-enum-types.c
+++ b/thunar/thunar-enum-types.c
@@ -104,6 +104,7 @@ thunar_column_get_type (void)
         { THUNAR_COLUMN_DATE_MODIFIED, "THUNAR_COLUMN_DATE_MODIFIED", N_ ("Date Modified"), },
         { THUNAR_COLUMN_DATE_DELETED,  "THUNAR_COLUMN_DATE_DELETED",  N_ ("Date Deleted"),  },
         { THUNAR_COLUMN_RECENCY,       "THUNAR_COLUMN_RECENCY",       N_ ("Recency"),       },
+        { THUNAR_COLUMN_LOCATION,      "THUNAR_COLUMN_LOCATION",      N_ ("Location"),      },
         { THUNAR_COLUMN_GROUP,         "THUNAR_COLUMN_GROUP",         N_ ("Group"),         },
         { THUNAR_COLUMN_MIME_TYPE,     "THUNAR_COLUMN_MIME_TYPE",     N_ ("MIME Type"),     },
         { THUNAR_COLUMN_NAME,          "THUNAR_COLUMN_NAME",          N_ ("Name"),          },
diff --git a/thunar/thunar-enum-types.h b/thunar/thunar-enum-types.h
index 39405320..a46f90cd 100644
--- a/thunar/thunar-enum-types.h
+++ b/thunar/thunar-enum-types.h
@@ -80,6 +80,7 @@ GType thunar_date_style_get_type (void) G_GNUC_CONST;
  * @THUNAR_COLUMN_DATE_ACCESSED : last access time.
  * @THUNAR_COLUMN_DATE_MODIFIED : last modification time.
  * @THUNAR_COLUMN_DATE_DELETED  : deletion time.
+ * @THUNAR_COLUMN_LOCATION      : file location.
  * @THUNAR_COLUMN_GROUP         : group's name.
  * @THUNAR_COLUMN_MIME_TYPE     : mime type (e.g. "text/plain").
  * @THUNAR_COLUMN_NAME          : display name.
@@ -102,6 +103,7 @@ typedef enum
   THUNAR_COLUMN_DATE_MODIFIED,
   THUNAR_COLUMN_DATE_DELETED,
   THUNAR_COLUMN_RECENCY,
+  THUNAR_COLUMN_LOCATION,
   THUNAR_COLUMN_GROUP,
   THUNAR_COLUMN_MIME_TYPE,
   THUNAR_COLUMN_NAME,
diff --git a/thunar/thunar-list-model.c b/thunar/thunar-list-model.c
index 21959263..ebb5baf0 100644
--- a/thunar/thunar-list-model.c
+++ b/thunar/thunar-list-model.c
@@ -171,6 +171,9 @@ static gint               sort_by_date_deleted                    (const ThunarF
 static gint               sort_by_recency                         (const ThunarFile       *a,
                                                                    const ThunarFile       *b,
                                                                    gboolean                case_sensitive);
+static gint               sort_by_location                        (const ThunarFile       *a,
+                                                                   const ThunarFile       *b,
+                                                                   gboolean                case_sensitive);
 static gint               sort_by_group                           (const ThunarFile       *a,
                                                                    const ThunarFile       *b,
                                                                    gboolean                case_sensitive);
@@ -623,6 +626,9 @@ thunar_list_model_get_column_type (GtkTreeModel *model,
     case THUNAR_COLUMN_DATE_DELETED:
       return G_TYPE_STRING;
 
+    case THUNAR_COLUMN_LOCATION:
+      return G_TYPE_STRING;
+
     case THUNAR_COLUMN_GROUP:
       return G_TYPE_STRING;
 
@@ -720,6 +726,7 @@ thunar_list_model_get_value (GtkTreeModel *model,
   ThunarFile  *file;
   GFile       *g_file;
   gchar       *str;
+  gchar       *uri;
 
   _thunar_return_if_fail (THUNAR_IS_LIST_MODEL (model));
   _thunar_return_if_fail (iter->stamp == (THUNAR_LIST_MODEL (model))->stamp);
@@ -759,6 +766,14 @@ thunar_list_model_get_value (GtkTreeModel *model,
       g_value_take_string (value, str);
       break;
 
+    case THUNAR_COLUMN_LOCATION:
+      g_value_init (value, G_TYPE_STRING);
+      uri = thunar_file_dup_uri (file);
+      str = g_path_get_dirname (uri);
+      g_value_take_string (value, str);
+      g_free (uri);
+      break;
+
     case THUNAR_COLUMN_GROUP:
       g_value_init (value, G_TYPE_STRING);
       group = thunar_file_get_group (file);
@@ -1014,6 +1029,8 @@ thunar_list_model_get_sort_column_id (GtkTreeSortable *sortable,
     *sort_column_id = THUNAR_COLUMN_DATE_DELETED;
   else if (store->sort_func == sort_by_recency)
     *sort_column_id = THUNAR_COLUMN_RECENCY;
+  else if (store->sort_func == sort_by_location)
+    *sort_column_id = THUNAR_COLUMN_LOCATION;
   else if (store->sort_func == sort_by_type)
     *sort_column_id = THUNAR_COLUMN_TYPE;
   else if (store->sort_func == sort_by_owner)
@@ -1067,6 +1084,10 @@ thunar_list_model_set_sort_column_id (GtkTreeSortable *sortable,
       store->sort_func = sort_by_recency;
       break;
 
+    case THUNAR_COLUMN_LOCATION:
+      store->sort_func = sort_by_location;
+      break;
+
     case THUNAR_COLUMN_GROUP:
       store->sort_func = sort_by_group;
       break;
@@ -1539,6 +1560,35 @@ sort_by_recency      (const ThunarFile *a,
 
 
 
+static gint
+sort_by_location (const ThunarFile *a,
+                  const ThunarFile *b,
+                  gboolean          case_sensitive)
+{
+  gchar *uri_a;
+  gchar *uri_b;
+  gchar *location_a;
+  gchar *location_b;
+  gint   result;
+
+  uri_a = thunar_file_dup_uri (a);
+  uri_b = thunar_file_dup_uri (b);
+
+  location_a = g_path_get_dirname (uri_a);
+  location_b = g_path_get_dirname (uri_b);
+
+  result = strcasecmp (location_a, location_b);
+
+  g_free (uri_a);
+  g_free (uri_b);
+  g_free (location_a);
+  g_free (location_b);
+
+  return result;
+}
+
+
+
 static gint
 sort_by_group (const ThunarFile *a,
                const ThunarFile *b,
diff --git a/thunar/thunar-window.c b/thunar/thunar-window.c
index ecc022f4..1b570d35 100644
--- a/thunar/thunar-window.c
+++ b/thunar/thunar-window.c
@@ -2883,6 +2883,8 @@ thunar_window_start_open_location (ThunarWindow *window,
     {
       thunar_window_update_search (window);
       thunar_launcher_set_searching (window->launcher, TRUE);
+      if (THUNAR_IS_DETAILS_VIEW (window->view))
+        thunar_details_view_set_location_column_visible (THUNAR_DETAILS_VIEW (window->view), TRUE);
     }
 }
 
@@ -2912,6 +2914,9 @@ thunar_window_action_cancel_search (ThunarWindow *window)
   thunar_launcher_set_searching (window->launcher, FALSE);
   gtk_widget_hide (window->catfish_search_button);
   window->search_query = NULL;
+
+  if (THUNAR_IS_DETAILS_VIEW (window->view))
+    thunar_details_view_set_location_column_visible (THUNAR_DETAILS_VIEW (window->view), FALSE);
 }
 
 
