diff --git a/thunar/thunar-action-manager.c b/thunar/thunar-action-manager.c
index a873da5b..4c335e6f 100644
--- a/thunar/thunar-action-manager.c
+++ b/thunar/thunar-action-manager.c
@@ -1886,7 +1886,7 @@ thunar_action_manager_action_sendto_desktop (ThunarActionManager *action_mgr)
 
   /* launch the link job */
   application = thunar_application_get ();
-  thunar_application_link_into (application, action_mgr->widget, files, desktop_file, NULL);
+  thunar_application_link_into (application, action_mgr->widget, files, desktop_file, THUNAR_OPERATION_LOG_OPERATIONS, NULL);
   g_object_unref (G_OBJECT (application));
 
   /* cleanup */
@@ -2226,7 +2226,7 @@ thunar_action_manager_action_make_link (ThunarActionManager *action_mgr)
    */
   application = thunar_application_get ();
   thunar_application_link_into (application, action_mgr->widget, g_files,
-                                thunar_file_get_file (action_mgr->current_directory), action_mgr->new_files_created_closure);
+                                thunar_file_get_file (action_mgr->current_directory), THUNAR_OPERATION_LOG_OPERATIONS, action_mgr->new_files_created_closure);
   g_object_unref (G_OBJECT (application));
   g_list_free (g_files);
 
diff --git a/thunar/thunar-application.c b/thunar/thunar-application.c
index bd4046a7..94a7feb0 100644
--- a/thunar/thunar-application.c
+++ b/thunar/thunar-application.c
@@ -2174,6 +2174,7 @@ thunar_application_copy_into (ThunarApplication *application,
  * @parent            : a #GdkScreen, a #GtkWidget or %NULL.
  * @source_file_list  : the list of #GFile<!---->s that should be symlinked.
  * @target_file       : the target directory.
+ * @log_mode          : A #ThunarOperationLogMode enum to control logging.
  * @new_files_closure : a #GClosure to connect to the job's "new-files" signal,
  *                      which will be emitted when the job finishes with the
  *                      list of #GFile<!---->s created by the job, or
@@ -2184,11 +2185,12 @@ thunar_application_copy_into (ThunarApplication *application,
  * interaction.
  **/
 void
-thunar_application_link_into (ThunarApplication *application,
-                              gpointer           parent,
-                              GList             *source_file_list,
-                              GFile             *target_file,
-                              GClosure          *new_files_closure)
+thunar_application_link_into (ThunarApplication      *application,
+                              gpointer                parent,
+                              GList                  *source_file_list,
+                              GFile                  *target_file,
+                              ThunarOperationLogMode  log_mode,
+                              GClosure                *new_files_closure)
 {
   gchar *display_name;
   gchar *title;
@@ -2207,7 +2209,7 @@ thunar_application_link_into (ThunarApplication *application,
                                          title, thunar_io_jobs_link_files,
                                          source_file_list, target_file,
                                          FALSE, TRUE,
-                                         THUNAR_OPERATION_LOG_OPERATIONS,
+                                         log_mode,
                                          new_files_closure);
 
   /* free the title */
diff --git a/thunar/thunar-application.h b/thunar/thunar-application.h
index 0e7ccbc0..64b11249 100644
--- a/thunar/thunar-application.h
+++ b/thunar/thunar-application.h
@@ -116,11 +116,12 @@ void                  thunar_application_copy_into                 (ThunarApplic
                                                                     GFile             *target_file,
                                                                     GClosure          *new_files_closure);
 
-void                  thunar_application_link_into                 (ThunarApplication *application,
-                                                                    gpointer           parent,
-                                                                    GList             *source_file_list,
-                                                                    GFile             *target_file,
-                                                                    GClosure          *new_files_closure);
+void                  thunar_application_link_into                 (ThunarApplication      *application,
+                                                                    gpointer                parent,
+                                                                    GList                  *source_file_list,
+                                                                    GFile                  *target_file,
+                                                                    ThunarOperationLogMode  log_mode,
+                                                                    GClosure                *new_files_closure);
 
 void                  thunar_application_move_into                 (ThunarApplication      *application,
                                                                     gpointer                parent,
diff --git a/thunar/thunar-dbus-service.c b/thunar/thunar-dbus-service.c
index b7cd2eb7..178f14c0 100644
--- a/thunar/thunar-dbus-service.c
+++ b/thunar/thunar-dbus-service.c
@@ -1296,6 +1296,7 @@ thunar_dbus_service_transfer_files (ThunarDBusTransferMode transfer_mode,
             case THUNAR_DBUS_TRANSFER_MODE_LINK_INTO:
               thunar_application_link_into (application, screen,
                                             source_file_list, target_file_list->data,
+                                            THUNAR_OPERATION_LOG_NO_OPERATIONS,
                                             NULL);
               break;
             }
diff --git a/thunar/thunar-dnd.c b/thunar/thunar-dnd.c
index bf1ba316..c1dbc36d 100644
--- a/thunar/thunar-dnd.c
+++ b/thunar/thunar-dnd.c
@@ -235,7 +235,7 @@ thunar_dnd_perform (GtkWidget    *widget,
           break;
 
         case GDK_ACTION_LINK:
-          thunar_application_link_into (application, widget, file_list, thunar_file_get_file (file), new_files_closure);
+          thunar_application_link_into (application, widget, file_list, thunar_file_get_file (file), THUNAR_OPERATION_LOG_OPERATIONS, new_files_closure);
           break;
 
         default:
diff --git a/thunar/thunar-io-jobs.c b/thunar/thunar-io-jobs.c
index e4d1bb7e..dac6ed41 100644
--- a/thunar/thunar-io-jobs.c
+++ b/thunar/thunar-io-jobs.c
@@ -761,16 +761,18 @@ _thunar_io_jobs_link (ThunarJob  *job,
                       GArray     *param_values,
                       GError    **error)
 {
-  ThunarThumbnailCache *thumbnail_cache;
-  ThunarApplication    *application;
-  GError               *err = NULL;
-  GFile                *real_target_file;
-  GList                *new_files_list = NULL;
-  GList                *source_file_list;
-  GList                *sp;
-  GList                *target_file_list;
-  GList                *tp;
-  guint                 n_processed = 0;
+  ThunarThumbnailCache   *thumbnail_cache;
+  ThunarApplication      *application;
+  GError                 *err = NULL;
+  GFile                  *real_target_file;
+  GList                  *new_files_list = NULL;
+  GList                  *source_file_list;
+  GList                  *sp;
+  GList                  *target_file_list;
+  GList                  *tp;
+  guint                   n_processed = 0;
+  ThunarJobOperation     *operation = NULL;
+  ThunarOperationLogMode  log_mode;
 
   _thunar_return_val_if_fail (THUNAR_IS_JOB (job), FALSE);
   _thunar_return_val_if_fail (param_values != NULL, FALSE);
@@ -788,6 +790,11 @@ _thunar_io_jobs_link (ThunarJob  *job,
   thumbnail_cache = thunar_application_get_thumbnail_cache (application);
   g_object_unref (application);
 
+  log_mode = thunar_job_get_log_mode (job);
+
+  if (log_mode == THUNAR_OPERATION_LOG_OPERATIONS)
+    operation = thunar_job_operation_new (THUNAR_JOB_OPERATION_KIND_LINK);
+
   /* process all files */
   for (sp = source_file_list, tp = target_file_list;
        err == NULL && sp != NULL && tp != NULL;
@@ -814,6 +821,9 @@ _thunar_io_jobs_link (ThunarJob  *job,
               thunar_thumbnail_cache_copy_file (thumbnail_cache, sp->data,
                                                 real_target_file);
 
+              /* remember the file for possible undo */
+              if (log_mode == THUNAR_OPERATION_LOG_OPERATIONS)
+                   thunar_job_operation_add (operation, sp->data, real_target_file);
             }
 
           /* release the real target file */
@@ -824,6 +834,12 @@ _thunar_io_jobs_link (ThunarJob  *job,
   /* release the thumbnail cache */
   g_object_unref (thumbnail_cache);
 
+  if (log_mode == THUNAR_OPERATION_LOG_OPERATIONS)
+    {
+      thunar_job_operation_commit (operation);
+      g_object_unref (operation);
+    }
+
   if (err != NULL)
     {
       thunar_g_list_free_full (new_files_list);
diff --git a/thunar/thunar-job-operation.c b/thunar/thunar-job-operation.c
index 8197506c..0458b620 100644
--- a/thunar/thunar-job-operation.c
+++ b/thunar/thunar-job-operation.c
@@ -378,6 +378,13 @@ thunar_job_operation_new_invert (ThunarJobOperation *job_operation)
         inverted_operation->source_file_list = thunar_g_list_copy_deep (job_operation->target_file_list);
         break;
 
+      case THUNAR_JOB_OPERATION_KIND_LINK:
+        inverted_operation = g_object_new (THUNAR_TYPE_JOB_OPERATION, NULL);
+        inverted_operation->operation_kind = THUNAR_JOB_OPERATION_KIND_UNLINK;
+        inverted_operation->source_file_list = thunar_g_list_copy_deep (job_operation->target_file_list);
+        inverted_operation->target_file_list = thunar_g_list_copy_deep (job_operation->source_file_list);
+        break;
+
       default:
         g_assert_not_reached ();
         break;
@@ -411,6 +418,7 @@ thunar_job_operation_execute (ThunarJobOperation *job_operation)
   switch (job_operation->operation_kind)
     {
       case THUNAR_JOB_OPERATION_KIND_DELETE:
+      case THUNAR_JOB_OPERATION_KIND_UNLINK:
         for (GList *lp = job_operation->source_file_list; lp != NULL; lp = lp->next)
           {
             if (!G_IS_FILE (lp->data))
