diff --git a/thunar/thunar-path-entry.c b/thunar/thunar-path-entry.c
index 756e3bd8..a515b0be 100644
--- a/thunar/thunar-path-entry.c
+++ b/thunar/thunar-path-entry.c
@@ -1371,10 +1371,10 @@ thunar_path_entry_get_search_query (ThunarPathEntry *path_entry)
 {
   unsigned long search_prefix_length;
   const gchar *text = gtk_entry_get_text (GTK_ENTRY (path_entry));
-  search_prefix_length = strlen (SEARCH_PREFIX);
+  search_prefix_length = strlen (thunar_util_get_search_prefix ());
 
   _thunar_return_val_if_fail (THUNAR_IS_PATH_ENTRY (path_entry), NULL);
-  _thunar_return_val_if_fail (strncmp (text, SEARCH_PREFIX, search_prefix_length) == 0, NULL);
+  _thunar_return_val_if_fail (strncmp (text, thunar_util_get_search_prefix (), search_prefix_length) == 0, NULL);
 
   return strlen(text) > search_prefix_length ? g_strdup (&text[search_prefix_length]) : g_strdup ("");
 }
diff --git a/thunar/thunar-util.c b/thunar/thunar-util.c
index 142211e3..8afbb408 100644
--- a/thunar/thunar-util.c
+++ b/thunar/thunar-util.c
@@ -82,8 +82,6 @@ enum
   DRAW_ON_ALL_SIDES,
 } DrawOnSide;
 
-const char *SEARCH_PREFIX = "Search: ";
-
 /**
  * thunar_util_strrchr_offset:
  * @str:    haystack
@@ -774,6 +772,19 @@ thunar_util_next_new_file_name (ThunarFile            *dir,
 
 
 
+/**
+ * thunar_util_get_search_prefix
+ *
+ * Return value: The localized search prefix
+**/
+const char*
+thunar_util_get_search_prefix (void)
+{
+  return _("Search: ");
+}
+
+
+
 /**
  * thunar_util_is_a_search_query
  * @string : the string to check
@@ -783,7 +794,7 @@ thunar_util_next_new_file_name (ThunarFile            *dir,
 gboolean
 thunar_util_is_a_search_query (const gchar *string)
 {
-  return strncmp (string, SEARCH_PREFIX, strlen (SEARCH_PREFIX)) == 0;
+  return strncmp (string, thunar_util_get_search_prefix (), strlen (thunar_util_get_search_prefix ())) == 0;
 }
 
 
diff --git a/thunar/thunar-util.h b/thunar/thunar-util.h
index a92c6f97..568adf26 100644
--- a/thunar/thunar-util.h
+++ b/thunar/thunar-util.h
@@ -50,43 +50,42 @@ typedef void (*ThunarBookmarksFunc) (GFile       *file,
                                      gint         row_num,
                                      gpointer     user_data);
 
-gchar     *thunar_util_str_get_extension        (const gchar *name) G_GNUC_WARN_UNUSED_RESULT;
-
-void       thunar_util_load_bookmarks           (GFile               *bookmarks_file,
-                                                 ThunarBookmarksFunc  foreach_func,
-                                                 gpointer             user_data);
-
-gboolean   thunar_util_looks_like_an_uri        (const gchar    *string) G_GNUC_WARN_UNUSED_RESULT;
-
-gchar     *thunar_util_expand_filename          (const gchar    *filename,
-                                                 GFile          *working_directory,
-                                                 GError        **error) G_GNUC_MALLOC G_GNUC_WARN_UNUSED_RESULT;
-
-gchar     *thunar_util_humanize_file_time       (guint64         file_time,
-                                                 ThunarDateStyle date_style,
-                                                 const gchar    *date_custom_style) G_GNUC_MALLOC G_GNUC_WARN_UNUSED_RESULT;
-
-GdkScreen *thunar_util_parse_parent             (gpointer        parent,
-                                                 GtkWindow     **window_return) G_GNUC_WARN_UNUSED_RESULT;
-
-time_t     thunar_util_time_from_rfc3339        (const gchar    *date_string) G_GNUC_WARN_UNUSED_RESULT;
-
-gchar     *thunar_util_change_working_directory (const gchar    *new_directory) G_GNUC_MALLOC G_GNUC_WARN_UNUSED_RESULT;
-
-void       thunar_setup_display_cb              (gpointer        data);
-gchar*     thunar_util_next_new_file_name       (ThunarFile            *dir,
-                                                 const gchar           *file_name,
-                                                 ThunarNextFileNameMode name_mode);
-gboolean   thunar_util_is_a_search_query        (const gchar    *string);
-gchar*     thunar_util_strjoin_list             (GList       *string_list,
-                                                 const gchar *separator);
-void       thunar_util_clip_view_background     (GtkCellRenderer      *cell,
-                                                 cairo_t              *cr,
-                                                 const GdkRectangle   *background_area,
-                                                 GtkWidget            *widget,
-                                                 GtkCellRendererState  flags);
-
-extern const char *SEARCH_PREFIX;
+gchar      *thunar_util_str_get_extension        (const gchar *name) G_GNUC_WARN_UNUSED_RESULT;
+
+void        thunar_util_load_bookmarks           (GFile               *bookmarks_file,
+                                                  ThunarBookmarksFunc  foreach_func,
+                                                  gpointer             user_data);
+
+gboolean    thunar_util_looks_like_an_uri        (const gchar    *string) G_GNUC_WARN_UNUSED_RESULT;
+
+gchar      *thunar_util_expand_filename          (const gchar    *filename,
+                                                  GFile          *working_directory,
+                                                  GError        **error) G_GNUC_MALLOC G_GNUC_WARN_UNUSED_RESULT;
+
+gchar      *thunar_util_humanize_file_time       (guint64         file_time,
+                                                  ThunarDateStyle date_style,
+                                                  const gchar    *date_custom_style) G_GNUC_MALLOC G_GNUC_WARN_UNUSED_RESULT;
+
+GdkScreen  *thunar_util_parse_parent             (gpointer        parent,
+                                                  GtkWindow     **window_return) G_GNUC_WARN_UNUSED_RESULT;
+
+time_t      thunar_util_time_from_rfc3339        (const gchar    *date_string) G_GNUC_WARN_UNUSED_RESULT;
+
+gchar      *thunar_util_change_working_directory (const gchar    *new_directory) G_GNUC_MALLOC G_GNUC_WARN_UNUSED_RESULT;
+
+void        thunar_setup_display_cb              (gpointer        data);
+gchar*      thunar_util_next_new_file_name       (ThunarFile            *dir,
+                                                  const gchar           *file_name,
+                                                  ThunarNextFileNameMode name_mode);
+const char *thunar_util_get_search_prefix        (void);
+gboolean    thunar_util_is_a_search_query        (const gchar    *string);
+gchar*      thunar_util_strjoin_list             (GList       *string_list,
+                                                  const gchar *separator);
+void        thunar_util_clip_view_background     (GtkCellRenderer      *cell,
+                                                  cairo_t              *cr,
+                                                  const GdkRectangle   *background_area,
+                                                  GtkWidget            *widget,
+                                                  GtkCellRendererState  flags);
 
 G_END_DECLS;
 
diff --git a/thunar/thunar-window.c b/thunar/thunar-window.c
index 571bb762..e669c700 100644
--- a/thunar/thunar-window.c
+++ b/thunar/thunar-window.c
@@ -2211,7 +2211,7 @@ thunar_window_notebook_switch_page (GtkWidget    *notebook,
   /* if the view has an ongoing search operation take that into account, otherwise cancel the current search (if there is one) */
   if (thunar_standard_view_get_search_query (THUNAR_STANDARD_VIEW (page)) != NULL)
     {
-      gchar *str = g_strjoin (NULL, SEARCH_PREFIX, thunar_standard_view_get_search_query (THUNAR_STANDARD_VIEW (page)), NULL);
+      gchar *str = g_strjoin (NULL, thunar_util_get_search_prefix (), thunar_standard_view_get_search_query (THUNAR_STANDARD_VIEW (page)), NULL);
       thunar_window_resume_search (window, str);
       g_free (str);
     }
@@ -4712,7 +4712,7 @@ thunar_window_action_search (ThunarWindow *window)
   if (window->is_searching == FALSE)
     {
       /* initiate search */
-      thunar_window_start_open_location (window, SEARCH_PREFIX);
+      thunar_window_start_open_location (window, thunar_util_get_search_prefix ());
       g_signal_handlers_block_by_func (G_OBJECT (window->location_toolbar_item_search), thunar_window_action_search, window);
       gtk_toggle_tool_button_set_active (GTK_TOGGLE_TOOL_BUTTON (window->location_toolbar_item_search), TRUE);
       g_signal_handlers_unblock_by_func (G_OBJECT (window->location_toolbar_item_search), thunar_window_action_search, window);
